
.feedback{
background-color: #191919;
display: flex;
justify-content: center;

padding-top: 88px;

}
.feedback-center{
    display: flex;

flex-direction: column;
}

.feedback-img{

}
.feedback-title{
    color: #E7E7E7;
    font-size: 24px;
    font-weight: 600;
    line-height: 120%; /* 28.8px */
    letter-spacing: 0.48px;
    text-transform: uppercase;
    margin-top: 16px;
    margin-bottom: 32px;
}
.feedback-text{
    color: rgba(255, 255, 255, 0.80);

    font-size: 16px;

    font-weight: 400;
    line-height: 125%; /* 20px */
    margin-bottom: 40px;
}
.feedback-form{

}
.name{
    background-color: #191919;
    border-top: 0;
    border-right: 0;
    border-left: 0;
    color: rgba(255, 255, 255, 0.80);
padding-bottom: 17px;
font-size: 20px;

font-weight: 400;
line-height: 70%; /* 14px */
width: 280px;

}
.name::after{
    content: "! Error" ;
    font-size: 16px;
    color: #EA4335;

}
.name:focus-visible{
    outline: 0;
    border-color: #DF3D3A;
}

.name:invalid::placeholder{

}
.e-mail{
    background-color: #191919;
    border-top: 0;
    border-right: 0;
    border-left: 0;
    color: rgba(255, 255, 255, 0.80);

font-size: 20px;
font-weight: 400;
line-height: 70%; /* 14px */
padding-bottom: 17px;
margin-top: 32px;
width: 280px;
}
.e-mail:focus-visible{
    outline: 0;
    border-color: #DF3D3A;
}

.e-mail:invalid::placeholder{

}

.message{
    background-color: #191919;
    border-top: 0;
    border-right: 0;
    border-left: 0;
    height: 81px;
    width: 280px;
    color: rgba(255, 255, 255, 0.80);

    font-size: 20px;
    font-weight: 400;
    line-height: 70%; /* 14px */
    margin-top: 32px;

}
.message:focus-visible{
    outline: 0;
}
.checkbox{

}
.feedback-button-center{
    display: flex;
    justify-content: center;
    align-items: center;
}
.feedback-button {
  text-transform: uppercase;
  font-size: 16px;
  font-weight: 600;
  letter-spacing: 0.32px;
  background-color: #191919;
  border: 0;
  box-sizing: border-box;
  margin: 1em;
  padding-top: 20px;
  padding-left: 120px;
  padding-right: 119px;
  padding-bottom: 18px;

  // Using inset box-shadow instead of border for sizing simplicity
  box-shadow: inset 0 0 0 2px #DF3D3A;
  color: #E7E7E7;
  font-size: inherit;
  font-weight: 700;

  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;
  transition: filter ease-out 0.5s;

  &:hover {
    filter:drop-shadow(0px 0px 2px rgb(216, 216, 216));
  }

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }
}

.draw {
    transition: color 0.25s;

  &::before,
  &::after {
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;
  }

  &:hover {
    color: #E7E7E7;
  }

  // Hover styles
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: #DF3D3A; // Make borders visible
    border-right-color: #DF3D3A;
    transition:
    width 0.25s ease-out, // Width expands first
    height 0.25s ease-out 0.25s; // And then height
  }

  &:hover::after {
    border-bottom-color: #DF3D3A; // Make borders visible
    border-left-color: #DF3D3A;
    transition:
    border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
    width 0.25s ease-out 0.5s, // And then exanding width
    height 0.25s ease-out 0.75s; // And finally height
  }
}

// Inherits from .draw
.meet {

  &:hover {
    color: #DF3D3A;
  }

  // Start ::after in same position as ::before
  &::after {
    top: 0;
    left: 0;
  }

  // Change colors
  &:hover::before {
    border-top-color: #E7E7E7;
    border-right-color: #E7E7E7;
  }

  &:hover::after {
    border-bottom-color: #E7E7E7;
    border-left-color: #E7E7E7;
    transition: // Animate height first, then width
      height 0.25s ease-out,
      width 0.25s ease-out 0.25s;
  }

}


.err{
    color: #EA4335;
    border-color: #DF3D3A;

font-family: Gilroy;
}
.checkboxa {
    margin: 0;
    width: 30px;
    height: 28px;
    display: block;
    visibility: hidden;
    position: absolute;
  }

  .label {
    position: relative;
    width: 30px;
    height: 28px;
    display: block;
    border: 2px solid rgba(255, 255, 255, 0.8);


  }
  .form-text-label{
    color: rgba(255, 255, 255, 0.80);

    font-size: 14px;

    font-weight: 400;
    line-height: 125%;

  }
  .form-text-span{
    text-decoration-line: underline;
  }
  .div {
    display: none;
    left: -2px;
    top: -16px;
    position: absolute;
  }

  .div > svg {
    fill: rgba(223, 61, 58, 1);
  }

  .checkboxa:checked + .label > div {
    display: block;
  }
  .checkbox-center{
    display: flex;
    align-items: center;
    column-gap: 24px;
    margin-top: 40px;
    margin-bottom: 40px;
  }
@media screen and (min-width: 320px) {

}
@media screen and (min-width: 768px) {

    .feedback{
        padding-top: 100px;
    }

    .feedback-center{
        padding-left: 60px;
    }

.feedback-form{
    display: flex;
    flex-direction: column;
}
.e-mail{
    width: 646px;
}
.name{
    width: 646px;
}
.message{
    width: 646px;
}
.feedback-title{
    letter-spacing: 0.6px;
    font-size: 30px;
}
.feedback-text{
    width: 400px;
    font-weight: 600;
    font-size: 20px;
}
.feedback-button-center{
    justify-content: start;

}
}
@media screen and (min-width: 1440px) {

  .feedback{
    padding-top: 170px;
  }

  .feedback-img {
    width: 700px;
  }

  .feedback-center{
      padding-left: 0;
  }
  .feedback-main-center{
      display: flex;
      // padding-left: 190px;
      column-gap: 150px;
      margin-top: 170px;
  }
}
